% Manual for FLaspm
\documentclass[a4paper]{article}
\usepackage{geometry}
\usepackage{color}
\usepackage{framed}
\usepackage{setspace}
\usepackage{amsmath}
\usepackage{hyperref}
\usepackage{cite}
\geometry{verbose,a4paper,tmargin=2cm,bmargin=1.5cm,lmargin=2cm,rmargin=3cm}
\definecolor{shadecolor}{rgb}{0.9,0.9,0.9}
\definecolor{darkblue}{rgb}{0,0,0.5}
\setlength{\parskip}{\medskipamount}
\setlength{\parindent}{0pt}
\onehalfspacing
\hypersetup{colorlinks, urlcolor=darkblue}

\begin{document}
\SweaveOpts{engine=R}
\title{FLaspm - Age Structured Production Models in FLR}
\author{Charles T T Edwards <charles.edwards@imperial.ac.uk>\\
Imperial College, London, UK\\
Finlay Scott <finlay.scott@cefas.co.uk\\
Cefas, Lowestoft, UK}
\date{January 2011}
\maketitle

\section{Introduction}

Something interesting on ASPM
% Implemented using the FLR library ~\cite{FLRref}

\section{The Models}

Start at equib.
SRR

R version
C version



Differences between the models

\subsection{Francis}

%Main reference ~\cite{Francis92}
The Francis model assumes that the surveys are carried out at a time when it was
reasonable to assume that about half the year's fishing mortality had occurred.
Consequently, the midyear biomass is used when fitting the model.

Internally, the biomass used in the model is the biomass at the start of the year.
The midyear biomass is calculated by:

\begin{equation}
B_{mid} = B_{start} e{0.5 (F + m)}
\end{equation}

Where $B$ is the exploitable biomass, $F$ is the level of fishing in that year and $m$ is
the natural mortality.

The $B_0$ that is estimated by $FLaspm$ is actually the exploitable biomass at the start of
the year. This must be taken into account when comparing the output to published
results.

The basic model equation is the standard Baranov equation:

\begin{equation}
N_{i,j} = N_{i-1,j-1} e{F_{i-1} + m}
\end{equation}

Where $N$ is the abundance of age $j$ at the start of year $i$. $F$ is only
applied to the exploitable fish.

$F$ is calculated each year by solving the catch equation:

%biomass*(1-exp(-z))*(f/z)

\begin{equation}
C_{i} = B_{i} (1 - e^{-F_{i}-m)} F_{i} / (F_{i} + m)
\end{equation}

Where $C$ is the catch. Internally, $F$ is estimated using a simple golden search
algorithm.

\subsection{Edwards}

% Main reference ~\cite{Walters06}

Assumptions
SRA is assuming a pulse of catches at the end of the year (i.e. after natural mortality), with H = Catch/Bexp


\section{Demonstration}

\subsection{Simple deterministic demonstration}
First you need to load the $FLaspm$ library

\begin{center}
\begin{minipage}[H]{0.95\textwidth}%
%\begin{shaded}%
<<quiet=TRUE,echo=TRUE,results=verbatim>>=
library(FLaspm)
@
%\end{shaded}%
\end{minipage}
\end{center}

To create an $FLaspm$ object you need to supply: the minimum and maximum ages
($amin$ and $amax$) the $catch$, the $indices$,
the natural mortality ($M$), the steepness of the SRR ($hh$), the selectivity ($sel$),
the maturity ($mat$) and the mass-at-age ($wght$)).

$amin$ and $amax$ are single numeric values. $catch$ must be an FLQuant. $index$
must be an FLQuant or FLQuants object and the dimensions of the indices must
be the same as the catch. Any empty years should be $NA$. $M$ and $hh$ can be passed
as single numeric values (they are represented as FLQuant objects in the class).
$sel$ and $mat$ can either be single numeric values that are the age of fish entering
the fishery and the age of maturity respectively, or they can be passed as
age structured FLQuant objects that have maturity and selectivity at age.
$wght$ must be passed as an FLQuant object.

Here we will use the Orange Roughy data set from CITE FRANCIS.

% The keep.source argument means that comments are kept in
% results=hide, no output from R console is included
% Not sure about the quiet argument
\begin{center}
\begin{minipage}[H]{0.95\textwidth}%
%\begin{shaded}%
<<echo=TRUE,keep.source=TRUE,results=hide>>=
# Load the data - here's some I prepared earlier
data(NZOR)
catch <- NZOR[["catch"]]
index <- NZOR[["index"]]
# Check the dimensions are OK
dimnames(catch)
dimnames(index)
# Note that index has NA in some years
# Enter the parameter values
amin    <- 1
amax    <- 70
hh <- 0.95
M <- 0.05
mat_age <- 23
sel_age <- 23
@
%\end{shaded}%
\end{minipage}
\end{center}


We will need to calculate the mass-at-age using the Von Bertalanffy equations
and then create an age structured FLQuant for the masses.

\begin{center}
\begin{minipage}[H]{0.95\textwidth}%
%\begin{shaded}%
<<echo=TRUE,keep.source=TRUE,results=hide>>=
# age-length parameters
Linf  <- 42.5 #cm
k     <- 0.059
t0    <- -0.346
# length-weight
alpha <- 0.0963 # grams
beta  <- 2.68
# Set up FLQuants for weights
# Note that we convert the mass at age to tonnes
mass_at_age <- age_to_weight(amin:amax,Linf,k,t0,alpha,beta)
w <- FLQuant(mass_at_age, dimnames=list(age=amin:amax)) / 1e6
@
%\end{shaded}%
\end{minipage}
\end{center}

Now we can create the FLaspm object by calling the $FLaspm$ constructor and
passing the data:

\begin{center}
\begin{minipage}[H]{0.95\textwidth}%
%\begin{shaded}%
<<echo=TRUE,keep.source=TRUE,results=hide>>=
or <- FLaspm(catch=catch, index=index, M=M,hh=hh,sel=sel_age,
              mat=mat_age, wght=w, amax=amax, amin=amin)
@
%\end{shaded}%
\end{minipage}
\end{center}

The final stage is to set which model we will use: Francis or Edwards.
As the data has come from CITE FRANCIS we will use the Francis model. Each model
has two versions, one that is written in pure R, the other uses C. The results
from both are the same. The C version is faster so it is better to use that:

\begin{center}
\begin{minipage}[H]{0.95\textwidth}%
%\begin{shaded}%
<<echo=TRUE,keep.source=TRUE,results=hide>>=
model(or) <- aspm.Francis.C()
@
%\end{shaded}%
\end{minipage}
\end{center}

Setting the model also sets up a function to calculate the initial values for the fitted parameters (in
this case $B_{0}$. It is possible to specify your own but unless you have a good
reason to do so (such as problems with the fit) then you should the default
setting. To estimate the parameters use the $fmle()$ method:

\begin{center}
\begin{minipage}[H]{0.95\textwidth}%
%\begin{shaded}%
<<echo=TRUE,keep.source=TRUE,results=hide>>=
or <- fmle(or)
@
%\end{shaded}%
\end{minipage}
\end{center}

After fitting it is essential to check the quality of the fit by looking
at the likelihood profile. This can be done with the $profile()$ method. The
range argument can be used to explore the likelihood either side of the estimated
parameter value.

\begin{center}
\begin{minipage}[H]{0.95\textwidth}%
%\begin{shaded}%
<<echo=TRUE, fig=TRUE, keep.source=TRUE,results=hide>>=
profile(or,maxsteps=50,range=0.25)
@
%\end{shaded}%
\end{minipage}
\end{center}

You should hopefully see that the value of the fitted parameter occurs at the
maximum likelihood. The value of the fitted parameter can be seen with the
$params()$ method:

\begin{center}
\begin{minipage}[H]{0.95\textwidth}%
%\begin{shaded}%
<<echo=TRUE,keep.source=TRUE,results=verbatim>>=
params(or)
@
%\end{shaded}%
\end{minipage}
\end{center}

Remember that $B_{0}$ is the virgin exploitable biomass at the start of the year.
CITE Francis estimates $B_{0}$ midway through the year. We can compare our result
with Francis by calculating the midyear exploitable virgin biomass with the
exp.biomass.mid() method:

\begin{center}
\begin{minipage}[H]{0.95\textwidth}%
%\begin{shaded}%
<<echo=TRUE,keep.source=TRUE,results=verbatim>>=
exp.biomass.mid(or,yrfrac = 0.5,virgin=TRUE)[,1]
@
%\end{shaded}%
\end{minipage}
\end{center}

Francis estimates the value of midyear virgin biomass as 411000 tonnes. So our
estimate is pretty good. We can also check out estimated value of $q_{hat}$ with
the $calc.qhat()$ method:

\begin{center}
\begin{minipage}[H]{0.95\textwidth}%
%\begin{shaded}%
<<echo=TRUE,keep.source=TRUE,results=verbatim>>=
calc.qhat(or)
@
%\end{shaded}%
\end{minipage}
\end{center}

Francis reports the estimated value of $q_{hat}$ to be 0.59.

\subsection{Estimating a probability distribution for $B_{0}$}
Francis provides a Monte Carlo routine for estimating a probability
distribution for $B_{0}$. The routine answers the question: "If this were
the true $B_{0}$, how likely is it that we would get an estimate of virgin
biomass as large as or greater than $B_{0}$HAT", where $B_{0}$ hat is
the result from the simple deterministic assessment above. Following
Francis the procedure is as follows:

\begin{enumerate}
\item Choose a trial value of $B_{0}$.
\item Calculate the biomass history for this trial $B_{0}$.
\item Generate simulated indices by assuming that the indices are normally
distributed with a mean value equal to the corresponding value in the biomass
history and with a CV of 19\% (estimated by Francis).
\item Calculate the value of $B_{0sim}$ that maximises the likelihood estimate
for the simulated survey indices.
\item Repeat steps 1-4 100 times and calculate the proportion of the $B_{0sim}$
estimates that are greater than $B_{0}$HAT.
\item Repeat steps 1-5 for a range of trial of $B_{0}$ values.
\end{enumerate}

This process is relatively easy to carry out using $FLaspm$ because multiple
iterations can be processed in parallel.
A sequence of $B_{0trial}$ values at
the start of the year is calculated. These are looped over using a for loop.
The midyear biomass history for each
value of $B_{0}$ is calculated by setting the $params()$ value to the trial
$B_{0}$ value and using the $exp.biomass.mid()$ method.
The simulated index is generated using the R function $rnorm()$. It is possible
to generate all 100 iterations simultaneously. A new $FLaspm()$ is set up
using the simulated index and the value of $B_{0sim}$ that maximises the
likelihood for each iteration is calculated. The R code for this procedure using the New Zealand Orange Roughy
data is shown below:

\begin{center}
\begin{minipage}[H]{0.95\textwidth}%
%\begin{shaded}%
<<echo=TRUE,keep.source=TRUE,results=hide,eval=FALSE>>=
index.cv <- 0.19
niters <- 100
# Estimate the 'true' value of B0
or_true <- FLaspm(catch=catch, index=index, M=M,hh=hh,sel=sel_age,
              mat=mat_age, wght=w, fpm=1, amax=amax, amin=amin)
model(or_true) <- aspm.Francis.C()
or_true <- fmle(or_true)
B0_true <- params(or_true)['B0',]
# Set up another FLaspm object to calculate the biomass trajectory
or <- FLaspm(catch=catch, index=index, M=M,hh=hh,sel=sel_age,
              mat=mat_age, wght=w, fpm=1, amax=amax, amin=amin)
model(or) <- aspm.Francis.C()
# Set up sequence of trial B0 values
B0trial <- seq(from=300000,to=500000,length=10)
# Array to store estimated B0 values
B0store <- array(NA,dim=c(length(B0trial),niters))
for (i in 1:length(B0trial))
{
  # set the B0 value and evalutate the midyear biomass trajectory
  params(or)['B0',] <- B0trial[i]
  or.traj.mid <- exp.biomass.mid(or,yrfrac=0.5,virgin=F)
  # generate 100 random indices based on the biomass trajectory
  index.sim <- rnorm(niters,or.traj.mid,index.cv*or.traj.mid)
  # Set up an FLaspm object to fit all indices
  or.sim <- FLaspm(catch=catch, index=index.sim, M=M,hh=hh,sel=sel_age,
              mat=mat_age, wght=w, amax=amax, amin=amin)
  model(or.sim) <- aspm.Francis.C()
  # Fit all indices (takes a while...) and store the estimated value of B0
  or.sim <- fmle(or.sim)
  B0store[i,] <-(params(or.sim))
}
@
%\end{shaded}%
\end{minipage}
\end{center}

% Sneakily load in previously prepared results and other parameters
\begin{center}
\begin{minipage}[H]{0.95\textwidth}%
%\begin{shaded}%
<<echo=FALSE,results=hide>>=
index.cv <- 0.19
niters <- 100
or_true <- FLaspm(catch=catch, index=index, M=M,hh=hh,sel=sel_age,
              mat=mat_age, wght=w, fpm=1, amax=amax, amin=amin)
model(or_true) <- aspm.Francis.C()
or_true <- fmle(or_true)
B0_true <- params(or_true)['B0',]
or <- FLaspm(catch=catch, index=index, M=M,hh=hh,sel=sel_age,
              mat=mat_age, wght=w, fpm=1, amax=amax, amin=amin)
model(or) <- aspm.Francis.C()
B0trial <- seq(from=300000,to=500000,length=10)
load("B0store.RData")
@
%\end{shaded}%
\end{minipage}
\end{center}


The probability of the value of $B_{0sim}$ being greater than $B_{0trial}$
cab then be calculated and plotted.

\begin{center}
\begin{minipage}[H]{0.95\textwidth}%
%\begin{shaded}%
<<echo=TRUE, fig=TRUE, keep.source=TRUE,results=hide>>=
propB0 <- apply(B0store>=c(B0_true),1,sum) / niters
plot(B0trial,propB0,type="l")
@
%\end{shaded}%
\end{minipage}
\end{center}

To estimate the probability distribution of $B_{0}$ Francis fits a
Johnson Su distribution by maximum likelihood (REF Johnson and Kotz).
The Johnson Su distribution and likelihood function are included in $FLaspm$.
The area under the PDF curve between two value of $B_{0}$ is proportional to
the confidence that the true value of $B_{0}$ lies between these two values.

\begin{center}
\begin{minipage}[H]{0.95\textwidth}%
%\begin{shaded}%
<<echo=TRUE, fig=TRUE, keep.source=TRUE,results=hide>>=
initialparms <- c(g=-1,delta=1,xi=0,lambda=1)
# Scale B0trial by 1000 to help the fit
jcpars <- optim(par=initialparms,fn=Johnsonll,b=B0trial/1000,m=niters,p=propB0)$par
B0plot <- seq(from=min(B0trial/1000), to = max(B0trial/1000), length=100)
jp <- JohnsonPDF(jcpars,B0plot)
plot(B0plot,jp,type="l")
@
%\end{shaded}%
\end{minipage}
\end{center}

\subsection{Sensitivity analysis}

\subsection{Risk analysis}


%\begin{center}
%\begin{minipage}[H]{0.95\textwidth}%
%%\begin{shaded}%
%<<echo=TRUE, eval=FALSE>>=
%@
%%\end{shaded}%
%\end{minipage}
%\end{center}


%\bibliography{flaspm_bib}{}
%\bibliographystyle{plain}

\end{document}